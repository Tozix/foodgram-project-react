name: Foodgram Workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        cd backend/
        pip install -r requirements.txt --use-pep517
   
    - name: Test with flake8
      run: |
        python -m flake8 backend

  build_and_push_back_to_docker_hub:
    name: Push Docker Back image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to Docker 
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@master
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-back:latest

  build_and_push_front_to_docker_hub:
    name: Push Docker Front image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to Docker 
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@master
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-front:latest

  deploy:
    name: Deploying on remote server
    runs-on: ubuntu-latest
    needs:
      - tests
      - build_and_push_back_to_docker_hub
      - build_and_push_front_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-back:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-front:latest
            sudo docker-compose stop
            sudo docker-compose rm backend -f
            sudo docker-compose rm frontend -f
            echo > .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_HOST }} >> .env
            sudo docker-compose up -d
            sudo docker-compose exec -T backend python manage.py collectstatic --no-input
  send_message:
      runs-on: ubuntu-latest
      needs: deploy
      steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Мой повелитель! ${{ github.workflow }} успешно выполнен!